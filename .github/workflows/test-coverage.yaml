on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - testing
      - develop

name: test-coverage

jobs:
  test-coverage:
    runs-on: macOS-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        id: install-r
        with:
          r-version: "4.2"

      - name: Install query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}
        
      - name: Install MacOS dependencies
        if: runner.os == 'macOS'
        run: |
          rm -f '/usr/local/bin/gfortran'
          rm -f '/usr/local/bin/2to3'
          rm -f '/usr/local/bin/2to3-3.11'
          rm -f '/usr/local/bin/idle3'
          rm -f '/usr/local/bin/idle3.11'
          rm -f '/usr/local/bin/pydoc3'
          rm -f '/usr/local/bin/pydoc3.11'
          rm -f '/usr/local/bin/python3'
          rm -f '/usr/local/bin/python3.11'
          rm -f '/usr/local/bin/python3-config'
          rm -f '/usr/local/bin/python3.11-config'
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=false # This prevents Homebrew from re-installing R, which will lead to .Platform$pkgType = "source".
          brew install gdal
        shell: bash

        #
        # Install Reca (awlays from repo)
        #
      - name: Install Reca 
        if: (github.event_name == 'push' && github.ref_name == 'develop') || (github.event_name == 'pull_request' && github.base_ref == 'develop')
        run: |
          install_packages("Reca", dependencies = TRUE, repos = c("https://stoxproject.github.io/repo/", "https://cloud.r-project.org/"))
        shell: Rscript {0}

        #
        # Install StoX dependencies, corresponding to release status (unstable, pre-release or release)
        #
      - name: Install R package dependencies from the unstableRepo
        if: (github.event_name == 'push' && github.ref_name == 'develop') || (github.event_name == 'pull_request' && github.base_ref == 'develop')
        run: |
          remotes::install_deps(dependencies = TRUE, repos = c("https://stoxproject.github.io/unstableRepo/", "https://cloud.r-project.org/"))
        shell: Rscript {0}

      - name: Install R package dependencies from the testingRepo
        if: (github.event_name == 'push' && github.ref_name == 'testing') || (github.event_name == 'pull_request' && github.base_ref == 'testing')
        run: |
          remotes::install_deps(dependencies = TRUE, repos = c("https://stoxproject.github.io/testingRepo/", "https://cloud.r-project.org/"))
        shell: Rscript {0}

      - name: Install R package dependencies from the official repo
        if: (github.event_name == 'push' && github.ref_name == 'master') || (github.event_name == 'pull_request' && github.base_ref == 'master')
        run: |
          remotes::install_deps(dependencies = TRUE, repos = c("https://stoxproject.github.io/repo/", "https://cloud.r-project.org/"))
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("drat")
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Test coverage
        run: |
          R CMD INSTALL .
          Rscript -e 'covr::codecov()'